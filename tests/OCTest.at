# Process with autom4te to create an -*- Autotest -*- test suite.

# Note: At runtime the shell script generated from this sources atlocal and
# atconfig, in that order. The atlocal file is generated by configure from
# atlocal.in; the atconfig file is generated by configure, too, but using
# the AC_CONFIG_TESTDIR macro in configure.ac (not using a atconfig.in file
# as teh current - June 2008 - autotest docs say). jhrg

#m4_define([base_url], [http://test.opendap.org:8080/dods/dts])
#m4_define([base_url], [http://motherlode.ucar.edu:8080/dts])
m4_define([base_url], [http://remotetest.unidata.ucar.edu/dts])

# 
# ------------------------------
#

AT_INIT([octest])

# Usage: _AT_TEST_*(<data source URL>, <baseline file>)

m4_define([_AT_DAS_TEST],   
[AT_BANNER([Test $1 $2])
AT_SETUP([DAS $1])
AT_KEYWORDS([das])
# Double the tests to exercise both the plain output (using oc_inq_text)
# and the 'generated' output using the -G option to ocprint. 
AT_CHECK([$abs_top_builddir/ocprint -T -p das $1], [], [stdout], [ignore])
AT_CHECK([diff -w -b $2 stdout], [], [ignore],[],[])
#
AT_CHECK([$abs_top_builddir/ocprint -T -G -p das $1], [], [stdout], [ignore])
AT_CHECK([diff -w -b $2 stdout], [], [ignore],[],[])
AT_CLEANUP])

m4_define([_AT_DDS_TEST],
[AT_BANNER([Test $1 $2])
AT_SETUP([DDS $1])
AT_KEYWORDS([dds])
#AT_CHECK([$abs_top_builddir/ocprint -T -p dds $1], [], [stdout], [ignore])
#AT_CHECK([diff -w -b $2 stdout], [], [ignore])
#
AT_CHECK([$abs_top_builddir/ocprint -T -G -p dds $1], [], [stdout], [ignore])
AT_CHECK([diff -w -b $2 stdout], [], [ignore])
AT_CLEANUP])

m4_define([_AT_DODS_TEST],
[AT_BANNER([Test $1 $2])
AT_SETUP([DODS $1])
AT_KEYWORDS([dods])
# The -G option has no affect on the 'data' request/output.
AT_CHECK([$abs_top_builddir/ocprint -T -p datadds $1], [], [stdout], [ignore])
AT_CHECK([diff -w -b $2 stdout], [], [ignore])
AT_CLEANUP])

m4_define([AT_DAS_RESPONSE_TEST],
[AT_BANNER([ocprint DAS response for $1.])
_AT_DAS_TEST([file://$abs_top_srcdir/tests/testdata/$1], [$abs_srcdir/baselines/$1.das])
])

m4_define([AT_DDS_RESPONSE_TEST],
[AT_BANNER([$abs_top_srcdir/ocprint DDS response for $1.])
_AT_DDS_TEST([file://$abs_top_srcdir/tests/testdata/$1], [$abs_srcdir/baselines/$1.dds])
])

m4_define([AT_DODS_RESPONSE_TEST],
[AT_BANNER([ocprint Data response for $1.])
_AT_DODS_TEST([file://$abs_top_srcdir/tests/testdata/$1], [$abs_srcdir/baselines/$1.dods])
])

m4_define([AT_DAS_URL_TEST],
[AT_BANNER([ocprint DAS response for $1.])
_AT_DAS_TEST([base_url/$1], [$abs_srcdir/baselines/$1.das])
])

m4_define([AT_DDS_URL_TEST],
[AT_BANNER([ocprint DDS response for $1.])
_AT_DDS_TEST([base_url/$1], [$abs_srcdir/baselines/$1.dds])
])

m4_define([AT_DODS_URL_TEST],
[AT_BANNER([ocprint DODS response for $1.])
_AT_DODS_TEST([base_url/$1], [$abs_srcdir/baselines/$1.dods])
])

m4_define([_AT_CONSTRAINT_TEST],
[AT_BANNER([ConstraintTest $1.$4])
AT_SETUP([CONSTRAINT $1.$4])
AT_KEYWORDS([constraint])
AT_CHECK([$abs_top_builddir/ocprint -T -C '$3' -G -p dds -p datadds $1], [], [stdout], [ignore])
AT_CHECK([diff -w -b $2 stdout], [], [ignore])
AT_CLEANUP])

m4_define([AT_CONSTRAINT_RESPONSE_TEST],
[AT_BANNER([ocprint Constraint response for $1.])
_AT_CONSTRAINT_TEST([base_url/$1], [$abs_srcdir/baselines/ce.$1.$2.dods], [[$3]], [$2])
])

AT_DODS_RESPONSE_TEST([Drifters])
AT_DODS_RESPONSE_TEST([EOSDB])
AT_DODS_RESPONSE_TEST([NestedSeq])
AT_DODS_RESPONSE_TEST([NestedSeq2])
AT_DODS_RESPONSE_TEST([OverideExample])
AT_DODS_RESPONSE_TEST([OverideExample])
AT_DODS_RESPONSE_TEST([SimpleDrdsExample])
AT_DODS_RESPONSE_TEST([b31])
AT_DODS_RESPONSE_TEST([b31a])
AT_DODS_RESPONSE_TEST([ingrid])
AT_DODS_RESPONSE_TEST([nestedDAS])
AT_DODS_RESPONSE_TEST([pbug0001b])
AT_DODS_RESPONSE_TEST([test.01])
AT_DODS_RESPONSE_TEST([test.02])
AT_DODS_RESPONSE_TEST([test.03])
AT_DODS_RESPONSE_TEST([test.04])
AT_DODS_RESPONSE_TEST([test.05])
AT_DODS_RESPONSE_TEST([test.06])
AT_DODS_RESPONSE_TEST([test.06a])
AT_DODS_RESPONSE_TEST([test.07])
AT_DODS_RESPONSE_TEST([test.07a])
AT_DODS_RESPONSE_TEST([test.21])
AT_DODS_RESPONSE_TEST([test.22])
AT_DODS_RESPONSE_TEST([test.23])
AT_DODS_RESPONSE_TEST([test.31])
AT_DODS_RESPONSE_TEST([test.32])
AT_DODS_RESPONSE_TEST([test.55])
AT_DODS_RESPONSE_TEST([test.56])
AT_DODS_RESPONSE_TEST([test.57])
AT_DODS_RESPONSE_TEST([test.66])
AT_DODS_RESPONSE_TEST([test.68])
AT_DODS_RESPONSE_TEST([test.69])
AT_DODS_RESPONSE_TEST([test.PointFile])
AT_DODS_RESPONSE_TEST([test.SwathFile])
AT_DODS_RESPONSE_TEST([test.an1])
AT_DODS_RESPONSE_TEST([test.dfp1])
AT_DODS_RESPONSE_TEST([test.dfr1])
AT_DODS_RESPONSE_TEST([test.dfr2])
AT_DODS_RESPONSE_TEST([test.dfr3])
AT_DODS_RESPONSE_TEST([test.gr1])
AT_DODS_RESPONSE_TEST([test.gr2])
AT_DODS_RESPONSE_TEST([test.gr3])
AT_DODS_RESPONSE_TEST([test.gr4])
AT_DODS_RESPONSE_TEST([test.gr5])
AT_DODS_RESPONSE_TEST([test.sds1])
AT_DODS_RESPONSE_TEST([test.sds2])
AT_DODS_RESPONSE_TEST([test.sds3])
AT_DODS_RESPONSE_TEST([test.sds4])
AT_DODS_RESPONSE_TEST([test.sds5])
AT_DODS_RESPONSE_TEST([test.sds6])
AT_DODS_RESPONSE_TEST([test.sds7])
AT_DODS_RESPONSE_TEST([test.vs1])
AT_DODS_RESPONSE_TEST([test.vs2])
AT_DODS_RESPONSE_TEST([test.vs3])
AT_DODS_RESPONSE_TEST([test.vs4])
AT_DODS_RESPONSE_TEST([test.vs5])
AT_DODS_RESPONSE_TEST([whoi])

AT_DODS_URL_TEST([test.01])
AT_DODS_URL_TEST([test.02])
AT_DODS_URL_TEST([test.03])
AT_DODS_URL_TEST([test.04])
AT_DODS_URL_TEST([test.05])
AT_DODS_URL_TEST([test.06a])
AT_DODS_URL_TEST([test.06])
AT_DODS_URL_TEST([test.07a])
AT_DODS_URL_TEST([test.07])
AT_DODS_URL_TEST([test.21])
AT_DODS_URL_TEST([test.22])
AT_DODS_URL_TEST([test.23])
AT_DODS_URL_TEST([test.31])
AT_DODS_URL_TEST([test.32])
AT_DODS_URL_TEST([test.50])
AT_DODS_URL_TEST([test.53])
AT_DODS_URL_TEST([test.55])
AT_DODS_URL_TEST([test.56])
AT_DODS_URL_TEST([test.57])
AT_DODS_URL_TEST([test.66])
AT_DODS_URL_TEST([test.67])
AT_DODS_URL_TEST([test.68])
AT_DODS_URL_TEST([test.69])

AT_CONSTRAINT_RESPONSE_TEST([test.01], [1], [f64])
AT_CONSTRAINT_RESPONSE_TEST([test.02], [1], [b[1:2:10]])
AT_CONSTRAINT_RESPONSE_TEST([test.03], [1], [i32[0:1][1:2][0:2]])
AT_CONSTRAINT_RESPONSE_TEST([test.04], [1], [types.i32])
AT_CONSTRAINT_RESPONSE_TEST([test.05], [1], [types.floats.f32])
AT_CONSTRAINT_RESPONSE_TEST([test.06], [1], [ThreeD])
AT_CONSTRAINT_RESPONSE_TEST([test.07], [1], [person.age])
AT_CONSTRAINT_RESPONSE_TEST([test.07], [2], [&age>2])
